package com.monezhao.controller;

import java.util.Arrays;

import javax.validation.Valid;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.monezhao.common.Result;
import com.monezhao.common.base.BaseController;
import com.monezhao.bean.{_sys}.{_Sys}{_CodeType};
import com.monezhao.service.{_Sys}{_CodeType}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

/**
 * {tableNameCn}Controller
 *
 * @author {author}
 */
@RestController
@RequestMapping("/{_sys}/{_codeType}")
@Api(tags = "{tableNameCn}")
public class {_Sys}{_CodeType}Controller extends BaseController {
    @Autowired
    private {_Sys}{_CodeType}Service {_sys}{_CodeType}Service;

    /**
     * 自定义查询列表
     *
     * @param {_sys}{_CodeType}
     * @param current
     * @param size
     * @return
     */
    @RequiresPermissions("{_sys}:{_codeType}:list")
    @GetMapping(value = "/list")
    @ApiOperation("{tableNameCn}列表")
    public Result list({_Sys}{_CodeType} {_sys}{_CodeType}, @RequestParam Integer current, @RequestParam Integer size) {
        IPage<{_Sys}{_CodeType}> pageList = {_sys}{_CodeType}Service.list(new Page<>(current, size), {_sys}{_CodeType});
        return Result.ok(pageList);
    }

    @RequiresPermissions("{_sys}:{_codeType}:list")
    @GetMapping(value = "/queryById")
    @ApiOperation("{tableNameCn}查询")
    public Result queryById(@RequestParam String id) {
        {_Sys}{_CodeType} {_sys}{_CodeType} = {_sys}{_CodeType}Service.getById(id);
        return Result.ok({_sys}{_CodeType});
    }

    /**
     * @功能：新增
     * @param {_sys}{_CodeType}
     * @return
     */
    @RequiresPermissions("{_sys}:{_codeType}:save")
    @PostMapping(value = "/save")
    @ApiOperation("{tableNameCn}新增")
    public Result save(@Valid @RequestBody {_Sys}{_CodeType} {_sys}{_CodeType}) {
        {_sys}{_CodeType}Service.save({_sys}{_CodeType});
        return Result.ok();
    }

    /**
     * @功能：修改
     * @param {_sys}{_CodeType}
     * @return
     */
    @RequiresPermissions("{_sys}:{_codeType}:update")
    @PutMapping(value = "/update")
    @ApiOperation("{tableNameCn}修改")
    public Result update(@Valid @RequestBody {_Sys}{_CodeType} {_sys}{_CodeType}) {
        {_sys}{_CodeType}Service.updateById({_sys}{_CodeType});
        return Result.ok();
    }

    /**
     * @功能：批量删除
     * @param ids
     * @return
     */
    @RequiresPermissions("{_sys}:{_codeType}:delete")
    @DeleteMapping(value = "/delete")
    @ApiOperation("{tableNameCn}删除")
    public Result delete(@RequestParam String ids) {
        if (ids == null || ids.trim().length() == 0) {
            return Result.error("ids can't be empty");
        }
        String[] idsArr = ids.split(",");
        if (idsArr.length > 1) {
            {_sys}{_CodeType}Service.removeByIds(Arrays.asList(idsArr));
        } else {
            {_sys}{_CodeType}Service.removeById(idsArr[0]);
        }
        return Result.ok();
    }
}
